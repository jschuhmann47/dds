<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
    http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
             version="2.0">

    <!--
   <properties>
       <property name="hibernate.archive.autodetection" value="class"/>

       <property name="hibernate.connection.driver_class" value="com.mysql.jdbc.Driver" />
       <property name="hibernate.connection.url" value="jdbc:mysql://localhost:3306/prueba_1" />
       <property name="hibernate.connection.username" value="root" />
       <property name="hibernate.connection.password" value="*****" />



           - validate: validate the schema, makes no changes to the database.
           - update: update the schema.
           - create: creates the schema, destroying previous data.
           - create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped.
           - none: does nothing with the schema, makes no changes to the database

       -->
    <!-- #############################################POSTGRESQL  #################################### -->


    <persistence-unit name="db" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>


        <class>models.entities.CargaDeActividades.entidades.Actividad</class>
        <class>models.entities.geoDDS.entidades.Localidad</class>
        <class>models.entities.geoDDS.entidades.Municipio</class>
        <class>models.entities.geoDDS.entidades.Pais</class>
        <class>models.entities.geoDDS.entidades.Provincia</class>
        <class>models.entities.organizaciones.contacto.Contacto</class>
        <class>models.entities.organizaciones.entidades.AgenteSectorial</class>
        <class>models.entities.organizaciones.entidades.Organizacion</class>
        <class>models.entities.organizaciones.entidades.Sector</class>
        <class>models.entities.organizaciones.entidades.TipoDeDocumento</class>
        <class>models.entities.organizaciones.entidades.Trabajador</class>
        <class>models.entities.organizaciones.solicitudes.Solicitud</class>
        <class>models.entities.parametros.ParametroFE</class>
        <class>models.entities.seguridad.cuentas.Usuario</class>
        <class>models.entities.transporte.privado.ServicioContratado</class>
        <class>models.entities.transporte.privado.ServicioEcologico</class>
        <class>models.entities.transporte.privado.TransportePrivado</class>
        <class>models.entities.transporte.publico.Linea</class>
        <class>models.entities.transporte.publico.Parada</class>
        <class>models.entities.transporte.publico.TransportePublico</class>
        <class>models.entities.transporte.MedioTransporte</class>
        <class>models.entities.trayectos.Tramo</class>
        <class>models.entities.trayectos.TramoCompartido</class>
        <class>models.entities.trayectos.Trayecto</class>
        <class>models.entities.trayectos.ViajeRealizado</class>








        <properties>
            <property name="hibernate.archive.autodetection" value="class"/>

            <property name="hibernate.connection.driver_class" value="org.postgresql.Driver" />
            <property name="hibernate.connection.url" value="jdbc:postgresql://ec2-35-168-122-84.compute-1.amazonaws.com:5432/dcmp8kvn04fgrr" />
            <property name="hibernate.connection.username" value="dublpkwgokteij" />
            <property name="hibernate.connection.password" value="*****" />
            <property name="sslmode" value="require"/>

            <!--            <property name="hibernate.connection.driver_class" value="org.hsqldb.jdbcDriver"/>-->
            <!--            <property name="hibernate.connection.url" value="jdbc:hsqldb:mem:app-db"/>-->
            <!--            <property name="hibernate.connection.username" value="sa"/>-->
            <!--            <property name="hibernate.connection.password" value=""/>-->
            <!--            <property name="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect"/>-->


            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="use_sql_comments" value="true"/>
            <property name="hibernate.hbm2ddl.auto" value="update"/>

            <!--
                - validate: validate the schema, makes no changes to the database.
                - update: update the schema.
                - create: creates the schema, destroying previous data.
                - create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped.
                - none: does nothing with the schema, makes no changes to the database
             -->

        </properties>


    </persistence-unit>

</persistence>
